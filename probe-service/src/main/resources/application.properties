#Server
server.port=8000
probe.id=${PROBE_ID}
probe.api.key=${PROBE_API_KEY}
connector.service.ip.port=${CONNECTOR_IP_PORT}
#Following property with values true or false, enables collection of starlink dish metrics via the router's Dishy gRPC API running on 192.168.0.1
starlink.dish.metrics.collection=${STARLINK_DISH_METRICS_COLLECTION}
#Following property with values true or false, enables collection of starlink dish location data via the router's Dishy gRPC API running on 192.168.0.1
starlink.dish.location.collection=${STARLINK_DISH_LOCATION_COLLECTION}
#Following three properties have to be set to true or false based on the network interfaces active on this machine
is.wired.interface.active=${IS_WIRED_INTERFACE_ACTIVE}
is.wifi.interface.active=${IS_WIFI_INTERFACE_ACTIVE}
is.cellular.interface.active=${IS_CELLULAR_INTERFACE_ACTIVE}
#Following property takes one of these four values - [wired, wifi, cellular, none] - depending on which interface the Starlink connection is connected to
#Network interface information can be fetched with the "ifconfig" command
starlink.active.interface=${STARLINK_ACTIVE_INTERFACE}
spring.task.scheduling.pool.size=5
#dev
#logging.level.org.springframework.messaging=trace
#logging.level.org.springframework.web.socket=trace

logging.level.root=ERROR
logging.pattern.console=%d{HH:mm:ss.SSS} - %level - %msg%n
